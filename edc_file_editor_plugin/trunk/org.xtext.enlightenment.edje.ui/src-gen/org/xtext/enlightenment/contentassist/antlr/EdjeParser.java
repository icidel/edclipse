/*
* generated by Xtext
*/
package org.xtext.enlightenment.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.CharStream;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.enlightenment.services.EdjeGrammarAccess;

public class EdjeParser extends AbstractContentAssistParser {
	
	@Inject
	private EdjeGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.enlightenment.contentassist.antlr.internal.InternalEdjeLexer createLexer(CharStream stream) {
		return new org.xtext.enlightenment.contentassist.antlr.internal.InternalEdjeLexer(stream);
	}
	
	@Override
	protected org.xtext.enlightenment.contentassist.antlr.internal.InternalEdjeParser createParser() {
		org.xtext.enlightenment.contentassist.antlr.internal.InternalEdjeParser result = new org.xtext.enlightenment.contentassist.antlr.internal.InternalEdjeParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				{
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getLUA_ScriptAccess().getGroup(), "rule__LUA_Script__Group__0");
					put(grammarAccess.getCollectionsAccess().getGroup(), "rule__Collections__Group__0");
					put(grammarAccess.getGroupAccess().getGroup(), "rule__Group__Group__0");
					put(grammarAccess.getGroupAccess().getGroup_1(), "rule__Group__Group_1__0");
					put(grammarAccess.getGroupAccess().getGroup_2(), "rule__Group__Group_2__0");
					put(grammarAccess.getGroupAccess().getGroup_2_1(), "rule__Group__Group_2_1__0");
					put(grammarAccess.getGroupAccess().getGroup_3(), "rule__Group__Group_3__0");
					put(grammarAccess.getGroupAccess().getGroup_4(), "rule__Group__Group_4__0");
					put(grammarAccess.getPartAccess().getGroup(), "rule__Part__Group__0");
					put(grammarAccess.getPartAccess().getGroup_1(), "rule__Part__Group_1__0");
					put(grammarAccess.getPartAccess().getGroup_2(), "rule__Part__Group_2__0");
					put(grammarAccess.getPartAccess().getGroup_2_1(), "rule__Part__Group_2_1__0");
					put(grammarAccess.getPartAccess().getGroup_3(), "rule__Part__Group_3__0");
					put(grammarAccess.getDescriptionAccess().getGroup(), "rule__Description__Group__0");
					put(grammarAccess.getDescriptionAccess().getGroup_7(), "rule__Description__Group_7__0");
					put(grammarAccess.getDescriptionAccess().getGroup_7_1(), "rule__Description__Group_7_1__0");
					put(grammarAccess.getCoordinatesAccess().getGroup(), "rule__Coordinates__Group__0");
					put(grammarAccess.getCoordinatesAccess().getGroup_0(), "rule__Coordinates__Group_0__0");
					put(grammarAccess.getCoordinatesAccess().getGroup_0_1(), "rule__Coordinates__Group_0_1__0");
					put(grammarAccess.getCoordinatesAccess().getGroup_1(), "rule__Coordinates__Group_1__0");
					put(grammarAccess.getCoordinatesAccess().getGroup_1_1(), "rule__Coordinates__Group_1_1__0");
					put(grammarAccess.getCoordinatesAccess().getGroup_2(), "rule__Coordinates__Group_2__0");
					put(grammarAccess.getCoordinatesAccess().getGroup_2_1(), "rule__Coordinates__Group_2_1__0");
					put(grammarAccess.getProgramsAccess().getGroup(), "rule__Programs__Group__0");
					put(grammarAccess.getProgramAccess().getGroup(), "rule__Program__Group__0");
					put(grammarAccess.getProgramAccess().getGroup_1(), "rule__Program__Group_1__0");
					put(grammarAccess.getProgramAccess().getGroup_2(), "rule__Program__Group_2__0");
					put(grammarAccess.getProgramAccess().getGroup_3(), "rule__Program__Group_3__0");
					put(grammarAccess.getProgramAccess().getGroup_4(), "rule__Program__Group_4__0");
					put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
					put(grammarAccess.getModelAccess().getIncludesAssignment_0(), "rule__Model__IncludesAssignment_0");
					put(grammarAccess.getModelAccess().getCollectionsAssignment_1(), "rule__Model__CollectionsAssignment_1");
					put(grammarAccess.getLUA_ScriptAccess().getContentAssignment_1(), "rule__LUA_Script__ContentAssignment_1");
					put(grammarAccess.getCollectionsAccess().getGroupsAssignment_1(), "rule__Collections__GroupsAssignment_1");
					put(grammarAccess.getGroupAccess().getNameAssignment_1_1(), "rule__Group__NameAssignment_1_1");
					put(grammarAccess.getGroupAccess().getMinxAssignment_2_1_0(), "rule__Group__MinxAssignment_2_1_0");
					put(grammarAccess.getGroupAccess().getMinyAssignment_2_1_1(), "rule__Group__MinyAssignment_2_1_1");
					put(grammarAccess.getGroupAccess().getPartAssignment_3_1(), "rule__Group__PartAssignment_3_1");
					put(grammarAccess.getGroupAccess().getProgramAssignment_4_1(), "rule__Group__ProgramAssignment_4_1");
					put(grammarAccess.getGroupAccess().getLua_scriptAssignment_5(), "rule__Group__Lua_scriptAssignment_5");
					put(grammarAccess.getPartAccess().getNameAssignment_1_1(), "rule__Part__NameAssignment_1_1");
					put(grammarAccess.getPartAccess().getMinxAssignment_2_1_0(), "rule__Part__MinxAssignment_2_1_0");
					put(grammarAccess.getPartAccess().getMinyAssignment_2_1_1(), "rule__Part__MinyAssignment_2_1_1");
					put(grammarAccess.getPartAccess().getTypeAssignment_3_1(), "rule__Part__TypeAssignment_3_1");
					put(grammarAccess.getPartAccess().getDescriptionsAssignment_4(), "rule__Part__DescriptionsAssignment_4");
					put(grammarAccess.getDescriptionAccess().getCoordinatesAssignment_2(), "rule__Description__CoordinatesAssignment_2");
					put(grammarAccess.getDescriptionAccess().getCoordinatesAssignment_5(), "rule__Description__CoordinatesAssignment_5");
					put(grammarAccess.getDescriptionAccess().getRedAssignment_7_1_0(), "rule__Description__RedAssignment_7_1_0");
					put(grammarAccess.getDescriptionAccess().getGreenAssignment_7_1_1(), "rule__Description__GreenAssignment_7_1_1");
					put(grammarAccess.getDescriptionAccess().getBlueAssignment_7_1_2(), "rule__Description__BlueAssignment_7_1_2");
					put(grammarAccess.getDescriptionAccess().getAlphaAssignment_7_1_3(), "rule__Description__AlphaAssignment_7_1_3");
					put(grammarAccess.getCoordinatesAccess().getXAssignment_0_1_0(), "rule__Coordinates__XAssignment_0_1_0");
					put(grammarAccess.getCoordinatesAccess().getYAssignment_0_1_1(), "rule__Coordinates__YAssignment_0_1_1");
					put(grammarAccess.getCoordinatesAccess().getWidthAssignment_0_1_2(), "rule__Coordinates__WidthAssignment_0_1_2");
					put(grammarAccess.getCoordinatesAccess().getHeightAssignment_0_1_3(), "rule__Coordinates__HeightAssignment_0_1_3");
					put(grammarAccess.getCoordinatesAccess().getXAssignment_1_1_0(), "rule__Coordinates__XAssignment_1_1_0");
					put(grammarAccess.getCoordinatesAccess().getYAssignment_1_1_1(), "rule__Coordinates__YAssignment_1_1_1");
					put(grammarAccess.getCoordinatesAccess().getXAssignment_2_1_0(), "rule__Coordinates__XAssignment_2_1_0");
					put(grammarAccess.getCoordinatesAccess().getYAssignment_2_1_1(), "rule__Coordinates__YAssignment_2_1_1");
					put(grammarAccess.getProgramsAccess().getProgramAssignment_1(), "rule__Programs__ProgramAssignment_1");
					put(grammarAccess.getProgramAccess().getNameAssignment_1_1(), "rule__Program__NameAssignment_1_1");
					put(grammarAccess.getProgramAccess().getSignalAssignment_2_1(), "rule__Program__SignalAssignment_2_1");
					put(grammarAccess.getProgramAccess().getSourceAssignment_3_1(), "rule__Program__SourceAssignment_3_1");
					put(grammarAccess.getProgramAccess().getActionAssignment_4_1(), "rule__Program__ActionAssignment_4_1");
					put(grammarAccess.getProgramAccess().getLua_scriptAssignment_5(), "rule__Program__Lua_scriptAssignment_5");
					put(grammarAccess.getActionAccess().getNameAssignment_0(), "rule__Action__NameAssignment_0");
					put(grammarAccess.getActionAccess().getParamsAssignment_1(), "rule__Action__ParamsAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.enlightenment.contentassist.antlr.internal.InternalEdjeParser typedParser = (org.xtext.enlightenment.contentassist.antlr.internal.InternalEdjeParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public EdjeGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(EdjeGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
